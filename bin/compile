#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

if [[ "${BP_DEBUG}X" != "X" ]]; then
  set -x # show all commands
fi

BUILD_DIR=$1
CACHE_DIR=$2

DEFAULT_SWIFT_VERSION=2.2
CLANG_VERSION=3.7.0

if [ -f $BUILD_DIR/.swift-version ]; then
  SWIFT_VERSION=$(cat $BUILD_DIR/.swift-version)
else
  SWIFT_VERSION=$DEFAULT_SWIFT_VERSION
fi
SWIFT_NAME_VERSION="swift-${SWIFT_VERSION}"
CLANG_NAME_VERSION="clang-${CLANG_VERSION}"

compile_buildpack_dir=$(cd $(dirname $0); cd ..; pwd)
compile_buildpack_bin=$compile_buildpack_dir/bin
$compile_buildpack_dir/compile-extensions/bin/check_stack_support

# Load some convenience functions like status(), echo(), and indent()
source $compile_buildpack_dir/bin/common.sh

BUILDPACK_PATH=$compile_buildpack_dir source $compile_buildpack_dir/compile-extensions/lib/common

mkdir -p $CACHE_DIR

SWIFT_DIR=$BUILD_DIR/.swift
mkdir -p $SWIFT_DIR

if [[ ! -d "$SWIFT_DIR/$SWIFT_VERSION" ]]; then
  cd $SWIFT_DIR
  status "Installing Swift $SWIFT_VERSION"
  mkdir -p $SWIFT_NAME_VERSION

  compiled_tgz=$($compile_buildpack_dir/compile-extensions/bin/download_dependency $SWIFT_NAME_VERSION.tar.gz /tmp)
  echo "Downloaded Swift [$compiled_tgz]" | indent

  if [[ "${BP_DEBUG}X" == "X" ]]; then
    tar xz -C $SWIFT_NAME_VERSION $compiled_tgz &> /dev/null
  else
    tar xz -C $SWIFT_NAME_VERSION $compiled_tgz
  fi

  ls -al $SWIFT_NAME_VERSION/
fi

if [[ ! -d "$CACHE_DIR/clang-$CLANG_VERSION" ]]; then
  cd $CACHE_DIR
  status "Installing Clang $CLANG_VERSION"
  mkdir -p $CLANG_NAME_VERSION

  compiled_tgz=$($compile_buildpack_dir/compile-extensions/bin/download_dependency $CLANG_NAME_VERSION.tar.xz /tmp)
  echo "Downloaded Clang [$compiled_tgz]" | indent

  xz -d -c $compiled_xz | tar x -C $CLANG_NAME_VERSION &> /dev/null | indent
  ls -al $CLANG_NAME_VERSION/
fi

export PATH="$SWIFT_DIR/$SWIFT_NAME_VERSION/$SWIFT_NAME_VERSION-ubuntu14.04/usr/bin:$CACHE_DIR/$CLANG_NAME_VERSION/clang+llvm-$CLANG_VERSION-x86_64-linux-gnu-ubuntu-14.04/bin:$PATH"

cd $BUILD_DIR
echo "-----> Building Package"
swift build --configuration release

# These should be statically linked, seems a swift bug
echo "-----> Copying dynamic libraries"
mkdir -p $BUILD_DIR/.swift-lib
cp $SWIFT_DIR/$SWIFT_VERSION/$SWIFT_VERSION-ubuntu14.04/usr/lib/swift/linux/*.so $BUILD_DIR/.swift-lib

echo "-----> Copying binaries to 'bin'"
mkdir -p $BUILD_DIR/.swift-bin
find $BUILD_DIR/.build/release -type f -perm /a+x -exec cp {} $BUILD_DIR/.swift-bin \;

# Setup application environment
PROFILE_PATH="$BUILD_DIR/.profile.d/swift.sh"
mkdir -p $BUILD_DIR/.profile.d
set-env() {
  echo "export $1=$2" >> $PROFILE_PATH
}
set-env PATH '$HOME/.swift-bin:$PATH'
set-env LD_LIBRARY_PATH '$HOME/.swift-lib'
